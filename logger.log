Config File
{'id': 8, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 10000, 'sync_steps': 1000}
======================================== Episode: 1/1 ========================================
Config File
{'id': 8, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 10000, 'sync_steps': 1000}
======================================== Episode: 1/1 ========================================
Config File
{'id': 8, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 10000, 'sync_steps': 1000}
======================================== Episode: 1/1 ========================================
Config File
{'id': 8, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 10000, 'sync_steps': 1000}
======================================== Episode: 1/1 ========================================
Config File
{'id': 8, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['rsi', 'close_-1_d'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 10000, 'sync_steps': 1000}
======================================== Episode: 1/1 ========================================
Config File
{'id': 8, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['rsi', 'close_-1_d'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 10000, 'sync_steps': 1000}
======================================== Episode: 1/1 ========================================
Config File
{'id': 8, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['rsi', 'close_-1_d'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 10000, 'sync_steps': 1000}
======================================== Episode: 1/1 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix', 'rsi'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 100, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/100 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 2/100 ========================================
======================================== Episode: 2, Train Profit: 360.625, Train Reward: 0.877
======================================== Episode: 2, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 3/100 ========================================
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 2/10 ========================================
======================================== Episode: 2, Train Profit: 360.625, Train Reward: 0.877
======================================== Episode: 2, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 3/10 ========================================
======================================== Episode: 3, Train Profit: 35.224, Train Reward: 0.53
======================================== Episode: 3, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 4/10 ========================================
======================================== Episode: 4, Train Profit: 1341.4, Train Reward: 1.905
======================================== Episode: 4, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 5/10 ========================================
======================================== Episode: 5, Train Profit: 1536.29, Train Reward: 2.048
======================================== Episode: 5, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 6/10 ========================================
======================================== Episode: 6, Train Profit: 395.476, Train Reward: 0.766
======================================== Episode: 6, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 7/10 ========================================
======================================== Episode: 7, Train Profit: 821.171, Train Reward: 1.272
======================================== Episode: 7, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 8/10 ========================================
======================================== Episode: 8, Train Profit: 930.808, Train Reward: 1.634
======================================== Episode: 8, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 9/10 ========================================
======================================== Episode: 9, Train Profit: 1400.06, Train Reward: 2.144
======================================== Episode: 9, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 10/10 ========================================
======================================== Episode: 10, Train Profit: 621.571, Train Reward: 1.34
======================================== Episode: 10, Valid Profit: 0, Valid Reward: 0
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 2/10 ========================================
======================================== Episode: 2, Train Profit: 360.625, Train Reward: 0.877
======================================== Episode: 2, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 3/10 ========================================
======================================== Episode: 3, Train Profit: 35.224, Train Reward: 0.53
======================================== Episode: 3, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 4/10 ========================================
======================================== Episode: 4, Train Profit: 1341.4, Train Reward: 1.905
======================================== Episode: 4, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 5/10 ========================================
======================================== Episode: 5, Train Profit: 1536.29, Train Reward: 2.048
======================================== Episode: 5, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 6/10 ========================================
======================================== Episode: 6, Train Profit: 395.476, Train Reward: 0.766
======================================== Episode: 6, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 7/10 ========================================
======================================== Episode: 7, Train Profit: 821.171, Train Reward: 1.272
======================================== Episode: 7, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 8/10 ========================================
======================================== Episode: 8, Train Profit: 930.808, Train Reward: 1.634
======================================== Episode: 8, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 9/10 ========================================
======================================== Episode: 9, Train Profit: 1400.06, Train Reward: 2.144
======================================== Episode: 9, Valid Profit: 0, Valid Reward: 0
======================================== Episode: 10/10 ========================================
======================================== Episode: 10, Train Profit: 621.571, Train Reward: 1.34
======================================== Episode: 10, Valid Profit: 0, Valid Reward: 0
Config File
{'id': 11, 'trader': 'DQNFixedTargets', 'estimator': 'BaseDuelingEstimator', 'features_used': ['close_-1_d', 'close_12_trix'], 'target_used': 'adj_close', 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 10, 'replay_size': 10000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/10 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 2/10 ========================================
======================================== Episode: 2, Train Profit: 360.625, Train Reward: 0.877
======================================== Episode: 2, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 3/10 ========================================
======================================== Episode: 3, Train Profit: 35.224, Train Reward: 0.53
======================================== Episode: 3, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 4/10 ========================================
======================================== Episode: 4, Train Profit: 1341.4, Train Reward: 1.905
======================================== Episode: 4, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 5/10 ========================================
======================================== Episode: 5, Train Profit: 1536.29, Train Reward: 2.048
======================================== Episode: 5, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 6/10 ========================================
======================================== Episode: 6, Train Profit: 395.476, Train Reward: 0.766
======================================== Episode: 6, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 7/10 ========================================
======================================== Episode: 7, Train Profit: 821.171, Train Reward: 1.272
======================================== Episode: 7, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 8/10 ========================================
======================================== Episode: 8, Train Profit: 930.808, Train Reward: 1.634
======================================== Episode: 8, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 9/10 ========================================
======================================== Episode: 9, Train Profit: 1400.06, Train Reward: 2.144
======================================== Episode: 9, Valid Profit: 693.07, Valid Reward: 693.07
======================================== Episode: 10/10 ========================================
======================================== Episode: 10, Train Profit: 621.571, Train Reward: 1.34
======================================== Episode: 10, Valid Profit: 693.07, Valid Reward: 693.07
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', '\n    https://pypi.org/project/stockstats/\n\n    How to set "features_used"\n\n\n    General rules {\n\n        Retrieve the symbol with 2 arguments ( <columnName>_<windowSize>_<statistics> )\n            -> 5 periods simple moving average of the high price: "high_5_sma"\n            -> 10 periods exponential moving average of the close: "close_10_ema"\n            -> 1 period delta of the high price: "high_-1_d" The - symbol stands for looking backwards.\n\n        Retrieve the symbol with 1 arguments ( <statistics>_<windowSize> )\n            -> 6 periods RSI: "rsi_6"\n            -> 10 periods CCI: "cci_10"\n            -> 13 periods ATR: "atr_13"\n\n    }\n\n\n    Change of the Close\n        -> "change" is the change of the close price in percentage.\n\n    Delta of Periods ( <column>_<window>_d or <column>_delta as a shortcut to <column>_-1_d )\n        -> "close_-1_d" retrieves the close price delta between current and prev. period.\n        -> "close_delta" is the same as "close_-1_d"\n        -> "high_2_d" retrieves the high price delta between current and 2 days later\n\n    Shift Periods\n        Shift the column backward or forward. It takes 2 parameters:\n            <> the name of the column to shift\n            <> periods to shift, can be negative\n\n            Example:\n                In [15]: df[[\'close\', \'close_-1_s\', \'close_2_s\']]\n                Out[15]:\n                          close    close_-1_s  close_2_s\n                date\n                20040817  11.20       11.20      10.53\n                20040818  10.29       11.20      10.55\n                20040819  10.53       10.29      10.10\n                20040820  10.55       10.53      10.25\n\n    RSI - Relative Strength Index (https://en.wikipedia.org/wiki/Relative_strength_index)\n        RSI chart the current and historical strength or weakness of a stock. It takes a window parameter.\n\n        -> "rsi" 14 periods RSI\n        -> "rsi_6" 6 periods RSI\n\n    Stochastic RSI (https://www.investopedia.com/terms/s/stochrsi.asp)\n        Stochastic RSI gives traders an idea of whether the current RSI value is overbought or oversold. It takes a window parameter.\n\n        Examples:\n            -> "stochrsi" retrieve the Stochastic RSI of 14 periods\n            -> "stochrsi_6" retrieve the Stochastic RSI of 6 periods\n\n    Log Return of the Close (https://en.wikipedia.org/wiki/Rate_of_return)\n        Logarithmic return = ln( close / last close)\n\n        From wiki:\n            For example, if a stock is priced at 3.570 USD per share at the close on one day, and at 3.575 USD per share \n            at the close the next day, then the logarithmic return is: ln(3.575/3.570) = 0.0014, or 0.14%.\n\n        -> "log-ret" access this column.\n\n    RSV - Raw Stochastic Value\n        RSV is essential for calculating KDJ. It takes a window parameter.\n\n        From wiki:\n            KDJ indicator is a technical indicator used to analyze and predict changes in stock trends and \n            price patterns in a traded asset. KDJ indicator is otherwise known as the random index. \n            It is a very practical technical indicator which is most commonly used in market trend analysis of short-term stock.\n\n        -> "rsv" or "rsv_6" to access it.\n\n    SMMA - Smoothed Moving Average\n        It takes two parameters, column and window.\n\n        For example, use "close_7_smma\'] to retrieve the 7 periods smoothed moving average of the close price.\n\n    TRIX - Triple Exponential Average (https://www.investopedia.com/articles/technical/02/092402.asp)\n        The triple exponential average is used to identify oversold and overbought markets.\n\n        The algorithm is:\n\n            TRIX = (TripleEMA - LastTripleEMA) -  * 100 / LastTripleEMA\n            TripleEMA = EMA of EMA of EMA\n            LastTripleEMA =  TripleEMA of the last period\n\n        It takes two parameters, column and window. By default, the column is close, the window is 12.\n\n\n        Examples:\n\n            -> "trix" stands for 12 periods Trix for the close price.\n            -> "middle_10_trix" stands for the 10 periods Trix for the typical(middle) price.\n\n    TEMA - Another Triple Exponential Average (https://www.forextraders.com/forex-education/forex-technical-analysis/triple-exponential-moving-average-the-tema-indicator/)\n        Tema is another implementation for the triple exponential moving average.\n\n        TEMA=(3 x EMA) - (3 x EMA of EMA) + (EMA of EMA of EMA)\n\n        It takes two parameters, column and window. By default, the column is close, the window is 5.\n\n        Examples:\n\n            "tema" stands for 12 periods TEMA for the close price.\n            "middle_10_tema" stands for the 10 periods TEMA for the typical(middle) price.\n\n    VR - Volume Variation Index (https://help.eaglesmarkets.com/hc/en-us/articles/900002867026-Summary-of-volume-variation-index)\n        It is the strength index of trading volume.\n\n        Examples:\n\n            "vr" retrieves the 26 periods VR.\n            "vr_6" retrieves the 6 periods VR.\n\n    Typical Price (https://en.wikipedia.org/wiki/Typical_price)\n        It\'s the average of high, low and close.\n\n            -> "middle" access this value.\n\n    Simple Moving Average (https://www.investopedia.com/terms/m/mean.asp)\n        Follow the pattern <columnName>_<window>_sma to retrieve simple moving average.\n\n        -> "high_5_sma" 5 periods simple moving average of the high price\n\n    Moving Standard Deviation (https://www.investopedia.com/terms/s/standarddeviation.asp)\n        Follow the pattern <columnName>_<window>_mstd to retrieve the moving STD.\n\n        -> "high_5_mstd" 5 periods moving standard deviation of the high price\n\n    Moving Variance (https://www.investopedia.com/terms/v/variance.asp)\n        Follow the pattern <columnName>_<window>_mvar to retrieve the moving VAR.\n\n        -> "high_5_mvar" 5 periods moving variance of the high price\n\n    Volume Weighted Moving Average (https://www.investopedia.com/articles/trading/11/trading-with-vwap-mvwap.asp)\n        It\'s the moving average weighted by volume.\n\n        Examples:\n\n        -> "vwma" retrieves the 14 periods VWMA\n        -> "vwma_6" retrieves the 6 periods VWMA\n\n    CHOP - Choppiness Index (https://www.tradingview.com/education/choppinessindex/)\n        The Choppiness Index determines if the market is choppy.\n\n        It has a parameter for window size. The default window is 14. Change it with StockDataFrame.CHOP.\n\n        Examples:\n\n        -> "chop" retrieves the 14 periods CHOP\n        -> "chop_6" retrieves the 6 periods CHOP\n\n    MFI - Money Flow Index (https://www.investopedia.com/terms/m/mfi.asp)\n        The Money Flow Index identifies overbought or oversold signals in an asset.\n\n        It has a parameter for window size. The default window is 14. Change it with StockDataFrame.MFI.\n\n        Examples:\n\n        -> "mfi" retrieves the 14 periods MFI\n        -> "mfi_6" retrieves the 6 periods MFI\n\n    KAMA - Kaufman\'s Adaptive Moving Average (https://school.stockcharts.com/doku.php?id=technical_indicators:kaufman_s_adaptive_moving_average)\n        Kaufman\'s Adaptive Moving Average is designed to account for market noise or volatility.\n\n        It has 2 optional parameter and 2 required parameter\n\n        fast - optional, the parameter for fast EMA smoothing, default to 5\n        slow - optional, the parameter for slow EMA smoothing, default to 34\n        column - required, the column to calculate\n        window - required, rolling window size\n\n        Examples:\n\n        -> "close_10_kama_2_30" retrieves 10 periods KAMA of the close price with fast = 2 and slow = 30\n        -> "close_2_kama" retrieves 2 periods KAMA of the close price\n\n    features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
Config File
{'id': 18, 'trader': 'DQNFixedTargets', 'estimator': 'BaseEstimator', 'features_used': ['adj_close', 'rsi'], 'target_used': 'adj_close', 'normalizer': ['sigmoid', 'minmax'], 'optimizer': 'AdamW', 'learning_rate': 0.001, 'criterion': 'MSELoss', 'eps_scheduler': 'EpsilonScheduler', 'epsilon': 1, 'epsilon_final': 0.01, 'epsilon_decay': 0.995, 'action_space': 3, 'window_size': 10, 'batch_size': 32, 'n_episodes': 1, 'replay_size': 1000, 'sync_steps': 1000, 'prob_alpha': 0.6, 'beta_start': 0.4}
======================================== Episode: 1/1 ========================================
======================================== Episode: 1, Train Profit: 2299.266, Train Reward: 2.95
======================================== Episode: 1, Valid Profit: 0, Valid Reward: 0
